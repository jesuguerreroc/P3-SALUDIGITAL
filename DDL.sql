-- Crear la tabla de Roles
CREATE TABLE Rol (
  IdRol NUMBER,
  NombreRol VARCHAR2(50),
  PRIMARY KEY (IdRol)
);

-- Crear la tabla de Usuarios
CREATE TABLE Usuario (
  IdUsuario NUMBER GENERATED BY DEFAULT AS IDENTITY,
  Nombres VARCHAR2(100),
  Apellidos VARCHAR2(100),
  NombreUsuario VARCHAR2(100),
  Contraseña VARCHAR2(255),
  IdRol NUMBER,
  Activo NUMBER(1),
  PRIMARY KEY (IdUsuario),
  CONSTRAINT fk_rol FOREIGN KEY (IdRol) REFERENCES Rol(IdRol)
);

-- Crear la tabla de Especialidades
CREATE TABLE Especialidad (
  IdEspecialidad NUMBER GENERATED BY DEFAULT AS IDENTITY,
  NombreEspecialidad VARCHAR2(100),
  PRIMARY KEY (IdEspecialidad)
);

-- Crear la tabla de Pacientes
CREATE TABLE Paciente (
  IdPaciente NUMBER GENERATED BY DEFAULT AS IDENTITY,
  Nombre VARCHAR2(100),
  Apellido VARCHAR2(100),
  Direccion VARCHAR2(255),
  Telefono VARCHAR2(20),
  FechaNacimiento DATE,
  Cedula VARCHAR2(20),
  IdUsuario NUMBER,
  PRIMARY KEY (IdPaciente),
  CONSTRAINT fk_paciente_usuario FOREIGN KEY (IdUsuario) REFERENCES Usuario(IdUsuario)
);

-- Crear la tabla de Doctores
CREATE TABLE Doctor (
  IdDoctor NUMBER GENERATED BY DEFAULT AS IDENTITY,
  Nombre VARCHAR2(100),
  Telefono VARCHAR2(20),
  IdEspecialidad NUMBER,
  Cedula VARCHAR2(20),
  IdUsuario NUMBER,
  PRIMARY KEY (IdDoctor),
  CONSTRAINT fk_doctor_especialidad FOREIGN KEY (IdEspecialidad) REFERENCES Especialidad(IdEspecialidad),
  CONSTRAINT fk_doctor_usuario FOREIGN KEY (IdUsuario) REFERENCES Usuario(IdUsuario)
);

-- Crear la tabla de Horarios
CREATE TABLE Horario (
  IdHorario NUMBER GENERATED BY DEFAULT AS IDENTITY,
  IdDoctor NUMBER,
  DiaSemana VARCHAR2(10),
  HoraInicio INTERVAL DAY TO SECOND,
  HoraFin INTERVAL DAY TO SECOND,
  PRIMARY KEY (IdHorario),
  CONSTRAINT fk_horario_doctor FOREIGN KEY (IdDoctor) REFERENCES Doctor(IdDoctor)
);

-- Crear la tabla de Citas
CREATE TABLE Cita (
  IdCita NUMBER GENERATED BY DEFAULT AS IDENTITY,
  FechaCita DATE,
  HoraCita INTERVAL DAY TO SECOND,
  IdPaciente NUMBER,
  IdDoctor NUMBER,
  Estado VARCHAR2(20),
  PRIMARY KEY (IdCita),
  CONSTRAINT fk_cita_paciente FOREIGN KEY (IdPaciente) REFERENCES Paciente(IdPaciente),
  CONSTRAINT fk_cita_doctor FOREIGN KEY (IdDoctor) REFERENCES Doctor(IdDoctor)
);

-- Crear la tabla de Historias Cl�nicas
CREATE TABLE HistoriaClinica (
  IdHistoriaClinica NUMBER GENERATED BY DEFAULT AS IDENTITY,
  IdPaciente NUMBER,
  IdDoctor NUMBER,
  FechaCreacion DATE,
  Diagnostico VARCHAR2(255),
  Tratamiento VARCHAR2(255),
  NotasAdicionales VARCHAR2(255),
  IdCita NUMBER,
  PRIMARY KEY (IdHistoriaClinica),
  CONSTRAINT fk_historia_paciente FOREIGN KEY (IdPaciente) REFERENCES Paciente(IdPaciente),
  CONSTRAINT fk_historia_doctor FOREIGN KEY (IdDoctor) REFERENCES Doctor(IdDoctor),
  CONSTRAINT fk_historia_cita FOREIGN KEY (IdCita) REFERENCES Cita(IdCita)
);


INSERT INTO ROL(IDROL,NOMBREROL) VALUES (1,'admin');
INSERT INTO ROL(IDROL,NOMBREROL) VALUES (21,'paciente');
INSERT INTO ROL(IDROL,NOMBREROL) VALUES (2,'doctor');
--Creando usuario admin

INSERT INTO USUARIO (NOMBRES,APELLIDOS,NOMBREUSUARIO,CONTRASE�A,IDROL,activo) VALUES ('admin',' ','admin','admin',1,1);


--HISTORIAL Y TRIGGERS
-- Crear tabla de historial de usuarios
CREATE TABLE HistorialUsuario (
    IdHistorial NUMBER GENERATED BY DEFAULT AS IDENTITY,
    IdUsuario NUMBER,
    Nombres_Anterior VARCHAR2(100),
    Apellidos_Anterior VARCHAR2(100),
    NombreUsuario_Anterior VARCHAR2(100),
    Contraseña_Anterior VARCHAR2(255),
    IdRol_Anterior NUMBER,
    Activo_Anterior NUMBER(1),
    Nombres_Nuevo VARCHAR2(100),
    Apellidos_Nuevo VARCHAR2(100),
    NombreUsuario_Nuevo VARCHAR2(100),
    Contraseña_Nuevo VARCHAR2(255),
    IdRol_Nuevo NUMBER,
    Activo_Nuevo NUMBER(1),
    TipoOperacion VARCHAR2(20),
    FechaOperacion TIMESTAMP,
    Usuario_Responsable VARCHAR2(100),
    PRIMARY KEY (IdHistorial)
);

-- Trigger para INSERT
CREATE OR REPLACE TRIGGER TR_HistorialUsuario_INSERT
AFTER INSERT ON Usuario
FOR EACH ROW
BEGIN
    INSERT INTO HistorialUsuario (
        IdUsuario,
        Nombres_Nuevo,
        Apellidos_Nuevo,
        NombreUsuario_Nuevo,
        Contraseña_Nuevo,
        IdRol_Nuevo,
        Activo_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :NEW.IdUsuario,
        :NEW.Nombres,
        :NEW.Apellidos,
        :NEW.NombreUsuario,
        :NEW.Contraseña,
        :NEW.IdRol,
        :NEW.Activo,
        'INSERT',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para UPDATE
CREATE OR REPLACE TRIGGER TR_HistorialUsuario_UPDATE
AFTER UPDATE ON Usuario
FOR EACH ROW
BEGIN
    INSERT INTO HistorialUsuario (
        IdUsuario,
        Nombres_Anterior,
        Apellidos_Anterior,
        NombreUsuario_Anterior,
        Contraseña_Anterior,
        IdRol_Anterior,
        Activo_Anterior,
        Nombres_Nuevo,
        Apellidos_Nuevo,
        NombreUsuario_Nuevo,
        Contraseña_Nuevo,
        IdRol_Nuevo,
        Activo_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdUsuario,
        :OLD.Nombres,
        :OLD.Apellidos,
        :OLD.NombreUsuario,
        :OLD.Contraseña,
        :OLD.IdRol,
        :OLD.Activo,
        :NEW.Nombres,
        :NEW.Apellidos,
        :NEW.NombreUsuario,
        :NEW.Contraseña,
        :NEW.IdRol,
        :NEW.Activo,
        'UPDATE',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para DELETE
CREATE OR REPLACE TRIGGER TR_HistorialUsuario_DELETE
AFTER DELETE ON Usuario
FOR EACH ROW
BEGIN
    INSERT INTO HistorialUsuario (
        IdUsuario,
        Nombres_Anterior,
        Apellidos_Anterior,
        NombreUsuario_Anterior,
        Contraseña_Anterior,
        IdRol_Anterior,
        Activo_Anterior,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdUsuario,
        :OLD.Nombres,
        :OLD.Apellidos,
        :OLD.NombreUsuario,
        :OLD.Contraseña,
        :OLD.IdRol,
        :OLD.Activo,
        'DELETE',
        SYSTIMESTAMP,
        USER
    );
END;
/

CREATE TABLE HistorialPaciente (
    IdHistorial NUMBER GENERATED BY DEFAULT AS IDENTITY,
    IdPaciente NUMBER,
    Nombre_Anterior VARCHAR2(100),
    Apellido_Anterior VARCHAR2(100),
    Direccion_Anterior VARCHAR2(255),
    Telefono_Anterior VARCHAR2(20),
    FechaNacimiento_Anterior DATE,
    Cedula_Anterior VARCHAR2(20),
    IdUsuario_Anterior NUMBER,
    Nombre_Nuevo VARCHAR2(100),
    Apellido_Nuevo VARCHAR2(100),
    Direccion_Nuevo VARCHAR2(255),
    Telefono_Nuevo VARCHAR2(20),
    FechaNacimiento_Nuevo DATE,
    Cedula_Nuevo VARCHAR2(20),
    IdUsuario_Nuevo NUMBER,
    TipoOperacion VARCHAR2(20),
    FechaOperacion TIMESTAMP,
    Usuario_Responsable VARCHAR2(100),
    PRIMARY KEY (IdHistorial)
);

-- Trigger para INSERT
CREATE OR REPLACE TRIGGER TR_HistorialPaciente_INSERT
AFTER INSERT ON Paciente
FOR EACH ROW
BEGIN
    INSERT INTO HistorialPaciente (
        IdPaciente,
        Nombre_Nuevo,
        Apellido_Nuevo,
        Direccion_Nuevo,
        Telefono_Nuevo,
        FechaNacimiento_Nuevo,
        Cedula_Nuevo,
        IdUsuario_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :NEW.IdPaciente,
        :NEW.Nombre,
        :NEW.Apellido,
        :NEW.Direccion,
        :NEW.Telefono,
        :NEW.FechaNacimiento,
        :NEW.Cedula,
        :NEW.IdUsuario,
        'INSERT',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para UPDATE
CREATE OR REPLACE TRIGGER TR_HistorialPaciente_UPDATE
AFTER UPDATE ON Paciente
FOR EACH ROW
BEGIN
    INSERT INTO HistorialPaciente (
        IdPaciente,
        Nombre_Anterior,
        Apellido_Anterior,
        Direccion_Anterior,
        Telefono_Anterior,
        FechaNacimiento_Anterior,
        Cedula_Anterior,
        IdUsuario_Anterior,
        Nombre_Nuevo,
        Apellido_Nuevo,
        Direccion_Nuevo,
        Telefono_Nuevo,
        FechaNacimiento_Nuevo,
        Cedula_Nuevo,
        IdUsuario_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdPaciente,
        :OLD.Nombre,
        :OLD.Apellido,
        :OLD.Direccion,
        :OLD.Telefono,
        :OLD.FechaNacimiento,
        :OLD.Cedula,
        :OLD.IdUsuario,
        :NEW.Nombre,
        :NEW.Apellido,
        :NEW.Direccion,
        :NEW.Telefono,
        :NEW.FechaNacimiento,
        :NEW.Cedula,
        :NEW.IdUsuario,
        'UPDATE',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para DELETE
CREATE OR REPLACE TRIGGER TR_HistorialPaciente_DELETE
AFTER DELETE ON Paciente
FOR EACH ROW
BEGIN
    INSERT INTO HistorialPaciente (
        IdPaciente,
        Nombre_Anterior,
        Apellido_Anterior,
        Direccion_Anterior,
        Telefono_Anterior,
        FechaNacimiento_Anterior,
        Cedula_Anterior,
        IdUsuario_Anterior,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdPaciente,
        :OLD.Nombre,
        :OLD.Apellido,
        :OLD.Direccion,
        :OLD.Telefono,
        :OLD.FechaNacimiento,
        :OLD.Cedula,
        :OLD.IdUsuario,
        'DELETE',
        SYSTIMESTAMP,
        USER
    );
END;
/

CREATE TABLE HistorialDoctor (
    IdHistorial NUMBER GENERATED BY DEFAULT AS IDENTITY,
    IdDoctor NUMBER,
    Nombre_Anterior VARCHAR2(100),
    Telefono_Anterior VARCHAR2(20),
    IdEspecialidad_Anterior NUMBER,
    Cedula_Anterior VARCHAR2(20),
    IdUsuario_Anterior NUMBER,
    Nombre_Nuevo VARCHAR2(100),
    Telefono_Nuevo VARCHAR2(20),
    IdEspecialidad_Nuevo NUMBER,
    Cedula_Nuevo VARCHAR2(20),
    IdUsuario_Nuevo NUMBER,
    TipoOperacion VARCHAR2(20),
    FechaOperacion TIMESTAMP,
    Usuario_Responsable VARCHAR2(100),
    PRIMARY KEY (IdHistorial)
);

-- Trigger para INSERT
CREATE OR REPLACE TRIGGER TR_HistorialDoctor_INSERT
AFTER INSERT ON Doctor
FOR EACH ROW
BEGIN
    INSERT INTO HistorialDoctor (
        IdDoctor,
        Nombre_Nuevo,
        Telefono_Nuevo,
        IdEspecialidad_Nuevo,
        Cedula_Nuevo,
        IdUsuario_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :NEW.IdDoctor,
        :NEW.Nombre,
        :NEW.Telefono,
        :NEW.IdEspecialidad,
        :NEW.Cedula,
        :NEW.IdUsuario,
        'INSERT',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para UPDATE
CREATE OR REPLACE TRIGGER TR_HistorialDoctor_UPDATE
AFTER UPDATE ON Doctor
FOR EACH ROW
BEGIN
    INSERT INTO HistorialDoctor (
        IdDoctor,
        Nombre_Anterior,
        Telefono_Anterior,
        IdEspecialidad_Anterior,
        Cedula_Anterior,
        IdUsuario_Anterior,
        Nombre_Nuevo,
        Telefono_Nuevo,
        IdEspecialidad_Nuevo,
        Cedula_Nuevo,
        IdUsuario_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdDoctor,
        :OLD.Nombre,
        :OLD.Telefono,
        :OLD.IdEspecialidad,
        :OLD.Cedula,
        :OLD.IdUsuario,
        :NEW.Nombre,
        :NEW.Telefono,
        :NEW.IdEspecialidad,
        :NEW.Cedula,
        :NEW.IdUsuario,
        'UPDATE',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para DELETE
CREATE OR REPLACE TRIGGER TR_HistorialDoctor_DELETE
AFTER DELETE ON Doctor
FOR EACH ROW
BEGIN
    INSERT INTO HistorialDoctor (
        IdDoctor,
        Nombre_Anterior,
        Telefono_Anterior,
        IdEspecialidad_Anterior,
        Cedula_Anterior,
        IdUsuario_Anterior,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdDoctor,
        :OLD.Nombre,
        :OLD.Telefono,
        :OLD.IdEspecialidad,
        :OLD.Cedula,
        :OLD.IdUsuario,
        'DELETE',
        SYSTIMESTAMP,
        USER
    );
END;
/

CREATE TABLE HistorialCita (
    IdHistorial NUMBER GENERATED BY DEFAULT AS IDENTITY,
    IdCita NUMBER,
    FechaCita_Anterior DATE,
    HoraCita_Anterior INTERVAL DAY TO SECOND,
    IdPaciente_Anterior NUMBER,
    IdDoctor_Anterior NUMBER,
    Estado_Anterior VARCHAR2(20),
    FechaCita_Nuevo DATE,
    HoraCita_Nuevo INTERVAL DAY TO SECOND,
    IdPaciente_Nuevo NUMBER,
    IdDoctor_Nuevo NUMBER,
    Estado_Nuevo VARCHAR2(20),
    TipoOperacion VARCHAR2(20),
    FechaOperacion TIMESTAMP,
    Usuario_Responsable VARCHAR2(100),
    PRIMARY KEY (IdHistorial)
);

-- Trigger para INSERT
CREATE OR REPLACE TRIGGER TR_HistorialCita_INSERT
AFTER INSERT ON Cita
FOR EACH ROW
BEGIN
    INSERT INTO HistorialCita (
        IdCita,
        FechaCita_Nuevo,
        HoraCita_Nuevo,
        IdPaciente_Nuevo,
        IdDoctor_Nuevo,
        Estado_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :NEW.IdCita,
        :NEW.FechaCita,
        :NEW.HoraCita,
        :NEW.IdPaciente,
        :NEW.IdDoctor,
        :NEW.Estado,
        'INSERT',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para UPDATE
CREATE OR REPLACE TRIGGER TR_HistorialCita_UPDATE
AFTER UPDATE ON Cita
FOR EACH ROW
BEGIN
    INSERT INTO HistorialCita (
        IdCita,
        FechaCita_Anterior,
        HoraCita_Anterior,
        IdPaciente_Anterior,
        IdDoctor_Anterior,
        Estado_Anterior,
        FechaCita_Nuevo,
        HoraCita_Nuevo,
        IdPaciente_Nuevo,
        IdDoctor_Nuevo,
        Estado_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdCita,
        :OLD.FechaCita,
        :OLD.HoraCita,
        :OLD.IdPaciente,
        :OLD.IdDoctor,
        :OLD.Estado,
        :NEW.FechaCita,
        :NEW.HoraCita,
        :NEW.IdPaciente,
        :NEW.IdDoctor,
        :NEW.Estado,
        'UPDATE',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para DELETE
CREATE OR REPLACE TRIGGER TR_HistorialCita_DELETE
AFTER DELETE ON Cita
FOR EACH ROW
BEGIN
    INSERT INTO HistorialCita (
        IdCita,
        FechaCita_Anterior,
        HoraCita_Anterior,
        IdPaciente_Anterior,
        IdDoctor_Anterior,
        Estado_Anterior,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdCita,
        :OLD.FechaCita,
        :OLD.HoraCita,
        :OLD.IdPaciente,
        :OLD.IdDoctor,
        :OLD.Estado,
        'DELETE',
        SYSTIMESTAMP,
        USER
    );
END;
/
--HISTORIAL HISTORIA CLINICA 
CREATE TABLE HistorialHistoriaClinica (
    IdHistorial NUMBER GENERATED BY DEFAULT AS IDENTITY,
    IdHistoriaClinica NUMBER,
    IdPaciente_Anterior NUMBER,
    IdDoctor_Anterior NUMBER,
    FechaCreacion_Anterior DATE,
    Diagnostico_Anterior VARCHAR2(255),
    Tratamiento_Anterior VARCHAR2(255),
    NotasAdicionales_Anterior VARCHAR2(255),
    IdCita_Anterior NUMBER,
    IdPaciente_Nuevo NUMBER,
    IdDoctor_Nuevo NUMBER,
    FechaCreacion_Nuevo DATE,
    Diagnostico_Nuevo VARCHAR2(255),
    Tratamiento_Nuevo VARCHAR2(255),
    NotasAdicionales_Nuevo VARCHAR2(255),
    IdCita_Nuevo NUMBER,
    TipoOperacion VARCHAR2(20),
    FechaOperacion TIMESTAMP,
    Usuario_Responsable VARCHAR2(100),
    PRIMARY KEY (IdHistorial)
);

-- Trigger para INSERT
CREATE OR REPLACE TRIGGER TR_HistorialHC_INSERT
AFTER INSERT ON HistoriaClinica
FOR EACH ROW
BEGIN
    INSERT INTO HistorialHistoriaClinica (
        IdHistoriaClinica,
        IdPaciente_Nuevo,
        IdDoctor_Nuevo,
        FechaCreacion_Nuevo,
        Diagnostico_Nuevo,
        Tratamiento_Nuevo,
        NotasAdicionales_Nuevo,
        IdCita_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :NEW.IdHistoriaClinica,
        :NEW.IdPaciente,
        :NEW.IdDoctor,
        :NEW.FechaCreacion,
        :NEW.Diagnostico,
        :NEW.Tratamiento,
        :NEW.NotasAdicionales,
        :NEW.IdCita,
        'INSERT',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para UPDATE
CREATE OR REPLACE TRIGGER TR_HistorialHC_UPDATE
AFTER UPDATE ON HistoriaClinica
FOR EACH ROW
BEGIN
    INSERT INTO HistorialHistoriaClinica (
        IdHistoriaClinica,
        IdPaciente_Anterior,
        IdDoctor_Anterior,
        FechaCreacion_Anterior,
        Diagnostico_Anterior,
        Tratamiento_Anterior,
        NotasAdicionales_Anterior,
        IdCita_Anterior,
        IdPaciente_Nuevo,
        IdDoctor_Nuevo,
        FechaCreacion_Nuevo,
        Diagnostico_Nuevo,
        Tratamiento_Nuevo,
        NotasAdicionales_Nuevo,
        IdCita_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdHistoriaClinica,
        :OLD.IdPaciente,
        :OLD.IdDoctor,
        :OLD.FechaCreacion,
        :OLD.Diagnostico,
        :OLD.Tratamiento,
        :OLD.NotasAdicionales,
        :OLD.IdCita,
        :NEW.IdPaciente,
        :NEW.IdDoctor,
        :NEW.FechaCreacion,
        :NEW.Diagnostico,
        :NEW.Tratamiento,
        :NEW.NotasAdicionales,
        :NEW.IdCita,
        'UPDATE',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para DELETE
CREATE OR REPLACE TRIGGER TR_HistorialHC_DELETE
AFTER DELETE ON HistoriaClinica
FOR EACH ROW
BEGIN
    INSERT INTO HistorialHistoriaClinica (
        IdHistoriaClinica,
        IdPaciente_Anterior,
        IdDoctor_Anterior,
        FechaCreacion_Anterior,
        Diagnostico_Anterior,
        Tratamiento_Anterior,
        NotasAdicionales_Anterior,
        IdCita_Anterior,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdHistoriaClinica,
        :OLD.IdPaciente,
        :OLD.IdDoctor,
        :OLD.FechaCreacion,
        :OLD.Diagnostico,
        :OLD.Tratamiento,
        :OLD.NotasAdicionales,
        :OLD.IdCita,
        'DELETE',
        SYSTIMESTAMP,
        USER
    );
END;
/

CREATE TABLE HistorialHorario (
    IdHistorial NUMBER GENERATED BY DEFAULT AS IDENTITY,
    IdHorario NUMBER,
    IdDoctor_Anterior NUMBER,
    DiaSemana_Anterior VARCHAR2(10),
    HoraInicio_Anterior INTERVAL DAY TO SECOND,
    HoraFin_Anterior INTERVAL DAY TO SECOND,
    IdDoctor_Nuevo NUMBER,
    DiaSemana_Nuevo VARCHAR2(10),
    HoraInicio_Nuevo INTERVAL DAY TO SECOND,
    HoraFin_Nuevo INTERVAL DAY TO SECOND,
    TipoOperacion VARCHAR2(20),
    FechaOperacion TIMESTAMP,
    Usuario_Responsable VARCHAR2(100),
    PRIMARY KEY (IdHistorial)
);

-- Trigger para INSERT
CREATE OR REPLACE TRIGGER TR_HistorialHorario_INSERT
AFTER INSERT ON Horario
FOR EACH ROW
BEGIN
    INSERT INTO HistorialHorario (
        IdHorario,
        IdDoctor_Nuevo,
        DiaSemana_Nuevo,
        HoraInicio_Nuevo,
        HoraFin_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :NEW.IdHorario,
        :NEW.IdDoctor,
        :NEW.DiaSemana,
        :NEW.HoraInicio,
        :NEW.HoraFin,
        'INSERT',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para UPDATE
CREATE OR REPLACE TRIGGER TR_HistorialHorario_UPDATE
AFTER UPDATE ON Horario
FOR EACH ROW
BEGIN
    INSERT INTO HistorialHorario (
        IdHorario,
        IdDoctor_Anterior,
        DiaSemana_Anterior,
        HoraInicio_Anterior,
        HoraFin_Anterior,
        IdDoctor_Nuevo,
        DiaSemana_Nuevo,
        HoraInicio_Nuevo,
        HoraFin_Nuevo,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdHorario,
        :OLD.IdDoctor,
        :OLD.DiaSemana,
        :OLD.HoraInicio,
        :OLD.HoraFin,
        :NEW.IdDoctor,
        :NEW.DiaSemana,
        :NEW.HoraInicio,
        :NEW.HoraFin,
        'UPDATE',
        SYSTIMESTAMP,
        USER
    );
END;
/

-- Trigger para DELETE
CREATE OR REPLACE TRIGGER TR_HistorialHorario_DELETE
AFTER DELETE ON Horario
FOR EACH ROW
BEGIN
    INSERT INTO HistorialHorario (
        IdHorario,
        IdDoctor_Anterior,
        DiaSemana_Anterior,
        HoraInicio_Anterior,
        HoraFin_Anterior,
        TipoOperacion,
        FechaOperacion,
        Usuario_Responsable
    ) VALUES (
        :OLD.IdHorario,
        :OLD.IdDoctor,
        :OLD.DiaSemana,
        :OLD.HoraInicio,
        :OLD.HoraFin,
        'DELETE',
        SYSTIMESTAMP,
        USER
    );
END;
/




